<div class="map-container">
  <div id="map"></div>
  <div class="table-container w-[30%] h-fit mx-6 absolute right-0 top-16">
    {{> table}}
  </div>
  <div id="coordinates" style="position: absolute; top: 10px; left: 10px; background: white; padding: 5px;"></div>
</div>

<script src="https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-geocoder/v5.0.0/mapbox-gl-geocoder.min.js"></script>
<link rel="stylesheet"
  href="https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-geocoder/v5.0.0/mapbox-gl-geocoder.css" type="text/css">
<link rel="stylesheet" href="static/index.css">
<script>
  mapboxgl.accessToken = 'pk.eyJ1IjoiZGluaGNodW9uZyIsImEiOiJjbG93bHo4MzQwc2FrMmpvbWpqd2hkNGN0In0.Qi7aQ4q5Ew0PVGADd-v2ew';

  var map = new mapboxgl.Map({
    container: 'map',
    style: 'mapbox://styles/mapbox/streets-v12',
    center: [106.6974, 10.7757],
    zoom: 14,
  });

  const geocoder = new MapboxGeocoder({
    accessToken: mapboxgl.accessToken,
    mapboxgl: mapboxgl,
    reverseGeocode: true,
    flipCoordinates: true,
    marker: {
      color: "red",
    },
    flyTo: {
      bearing: 0,
      animate: true,
      duration: 750,
      speed: 1,
      essential: true,
      curve: 1,
      easing: function (t) {
        return Math.sin((t * Math.PI) / 2);
      },
    },
  });

  map.addControl(new MapboxGeocoder({
    accessToken: mapboxgl.accessToken,
    mapboxgl: mapboxgl
  }));

  map.addControl(new mapboxgl.GeolocateControl({
    positionOptions: {
      enableHighAccuracy: true,
    },
    trackUserLocation: true,
    showUserHeading: true,
  }));

  map.addControl(new mapboxgl.NavigationControl());

  var mapDiv = document.getElementById('map');
  mapDiv.style.cssText = 'margin: 30px 30px; border: 1px solid whitesmoke; border-radius: 10px; left: 0px; width: 65%; height: 85%; box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.1);';

  let currentMarker = null;
  let hoverPopup = null;
  const coordinatesList = {{{ coordinatesList }}};
  const positionInfo = {{{ positionInfo }}};

  map.on('load', function () {
    addAds(coordinatesList);

    map.on('click', handleMapClick);

    map.on('mouseover', 'custom-marker', function (e) {
      console.log('Mouse entered custom marker.');
      map.getCanvas().style.cursor = 'pointer';

      const coordinates = e.features[0].geometry.coordinates.slice();
      const info = positionInfo[e.features[0].properties.idx];

      createHoverPopup(coordinates, info);
    });

    map.on('mouseleave', 'custom-marker', function () {
      console.log('Mouse left custom marker.');
      map.getCanvas().style.cursor = '';
      if (hoverPopup) {
        hoverPopup.remove();
      }
    });
  });

  function createHoverPopup(coordinates, info) {
    if (hoverPopup) {
      hoverPopup.remove();
    }

    const popupContent = `<h3>${info.HinhThuc}</h3>
    <p>Loại vị trí: ${info.LoaiViTri}</p>
    <p>Địa chỉ: ${info.DiaChi}</p>
    <p>Khu vực: ${info.KhuVuc}</p>
    <p>Quy hoạch: ${info.QuyHoach ? 'Đã quy hoạch' : 'Chưa quy hoạch'}</p>`;

    hoverPopup = new mapboxgl.Popup({ offset: 25 })
      .setLngLat(coordinates)
      .setHTML(popupContent)
      .addTo(map);
  }

  function handleMapClick(e) {
    if (currentMarker) {
      currentMarker.remove();
    }
    let isData = e.originalEvent.target.classList.contains('custom-marker');

    if (!isData) {
      currentMarker = createMarker(e.lngLat);
      fetchAddressInfo(e.lngLat);
    }
  }

  function createMarker(coordinates) {
    if (currentMarker) {
      currentMarker.remove();
    }
    return new mapboxgl.Marker()
      .setLngLat(coordinates)
      .addTo(map);
      
  }

  function fetchAddressInfo(coordinates) {
    fetch(`https://api.mapbox.com/geocoding/v5/mapbox.places/${coordinates.lng},${coordinates.lat}.json?types=poi&access_token=${mapboxgl.accessToken}`)
      .then(response => response.json())
      .then(data => {
        let popupContent = `<h3>Location Details</h3>
          <p>Longitude: ${coordinates.lng}</p>
          <p>Latitude: ${coordinates.lat}</p>`;
        if (data.features.length > 0) {
          const placeName = data.features[0].place_name;
          popupContent += `<p>Address: ${placeName}</p>`;
        } else {
          popupContent += '<p>No address information available.</p>';
        }
        createPopup(coordinates, popupContent);
      })
      .catch(error => {
        console.error('Error:', error);
      });
  }

  function createPopup(coordinates, content) {
    new mapboxgl.Popup()
      .setLngLat(coordinates)
      .setHTML(content)
      .addTo(map);
  }

  function addAds(coordinatesList) {
    coordinatesList.forEach(createCustomMarker);
  }

  function createCustomMarker(coordinates, idx) {
    const el = document.createElement('div');
    el.className = 'custom-marker';
    new mapboxgl.Marker(el)
      .setLngLat(coordinates)
      .setPopup(createPopupHTML(positionInfo[idx]))
      .addTo(map);
  }

  function createPopupHTML(info) {
    return new mapboxgl.Popup({ offset: 25 })
      .setHTML(`<h3><br>${info.LoaiBangQC}</br></h3>
        <p>Address: ${info.DiaChi}</p>
        <p>${info.KhuVuc}</p>
        <p>Kích thước: ${info.HinhThucQC}</p>
        <p>Số lượng: ${info.HinhThucQC}</p>
        <p>Hình thức: ${info.HinhThucQC}</p>
        <p>Phân Loại: ${info.LoaiViTri}</p>`);
  }
</script>